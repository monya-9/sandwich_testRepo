name: Provision ECS

on:
  workflow_dispatch:

jobs:
  provision:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.SANDWICH_USER_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SANDWICH_USER_AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Create ECS Cluster
        run: |
          aws ecs create-cluster --cluster-name sandwich-${{ github.repository_owner }}-${{ github.event.repository.name }} || true

      - name: Register Task Definition
        run: |
          cat <<EOF > taskdef.json
          {
            "family": "sandwich-${{ github.repository_owner }}-${{ github.event.repository.name }}",
            "networkMode": "awsvpc",
            "requiresCompatibilities": ["FARGATE"],
            "cpu": "256",
            "memory": "512",
            "containerDefinitions": [
              {
                "name": "app",
                "image": "public.ecr.aws/amazonlinux/amazonlinux:latest",
                "essential": true,
                "portMappings": [
                  {
                    "containerPort": 80,
                    "protocol": "tcp"
                  }
                ]
              }
            ]
          }
          EOF
          aws ecs register-task-definition --cli-input-json file://taskdef.json

      - name: Create ECS Service
        run: |
          aws ecs create-service             --cluster sandwich-${{ github.repository_owner }}-${{ github.event.repository.name }}             --service-name sandwich-${{ github.repository_owner }}-${{ github.event.repository.name }}             --task-definition sandwich-${{ github.repository_owner }}-${{ github.event.repository.name }}             --desired-count 1             --launch-type FARGATE             --network-configuration "awsvpcConfiguration={subnets=[subnet-xxxxx],securityGroups=[sg-xxxxx],assignPublicIp=ENABLED}" || true
