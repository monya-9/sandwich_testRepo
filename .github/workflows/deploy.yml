    name: Deploy Project

    on:
      push:
        branches:
          - main

    env:
      AWS_REGION: ap-northeast-2
      S3_BUCKET: sandwich-user-projects

    jobs:
      build-and-deploy:
        runs-on: ubuntu-latest

        steps:
          - name: Checkout code
            uses: actions/checkout@v3

          - name: Install Node.js
            uses: actions/setup-node@v3
            with:
              node-version: '18'

          - name: Install dependencies
            run: npm install

          - name: Build project
            run: npm run build

          - name: Check current directory files
            run: ls -la

          - name: Check build folder contents
            run: ls -la build || echo "build 폴더가 없습니다"

          - name: Configure AWS credentials
            uses: aws-actions/configure-aws-credentials@v3
            with:
              aws-access-key-id: ${{ secrets.SANDWICH_USER_AWS_ACCESS_KEY_ID }}
              aws-secret-access-key: ${{ secrets.SANDWICH_USER_AWS_SECRET_ACCESS_KEY }}
              aws-region: ap-northeast-2

          - name: Login to Amazon ECR
            uses: aws-actions/amazon-ecr-login@v2

          - name: Build Docker image
            run: |
              IMAGE_TAG=${GITHUB_SHA}
              ECR_URI=123456789012.dkr.ecr.ap-northeast-2.amazonaws.com/my-repo
              docker build -t $ECR_URI:$IMAGE_TAG .
              docker push $ECR_URI:$IMAGE_TAG

          - name: Deploy to S3
            run: aws s3 sync build/ s3://${{ env.S3_BUCKET }}/${{ secrets.USER_ID }}/${{ secrets.PROJECT_ID }} --acl public-read

          - name: Invalidate CloudFront cache
            run: |
              aws cloudfront create-invalidation \
              --distribution-id ${{ secrets.SANDWICH_USER_CLOUDFRONT_DISTRIBUTION_ID }} \
              --paths "/${{ secrets.USER_ID }}/${{ secrets.PROJECT_ID }}/*"



